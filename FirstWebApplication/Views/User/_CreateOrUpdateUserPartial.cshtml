@model FirstWebApplication.Models.User

<form name="userForm">
    @Html.AntiForgeryToken();
    <div class="modal-header">
        <h4 class="modal-title">
            @*<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>*@
            <span>@*@(int.Parse(Model.UserId) > 0 ? "Update User" : "Create New User")*@</span>
            <span>Create New User</span>

        </h4>
    </div>
    <div class="modal-body">
        @Html.HiddenFor(c => c.Id)
        <div class="row">
            <div class="col-md-12">
                <div class="form-group">
                    @Html.LabelFor(x => x.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.UserId, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(x => x.UserId, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.UserName, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(x => x.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Tel, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(x => x.Tel, new { htmlAttributes = new { @class = "form-control", required = true } })
                        @Html.ValidationMessageFor(x => x.Tel, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

    </div>

    <div class="modal-footer">
        <button type="button" class="btn btn-sm pull-left> data-dimiss="modal">Cancel</button></button>
        <button type="button" onclick="createOrUpdate()" class="btn btn-sm btn-success pull-right> data-dimiss="modal">Save</button></button>
    </div>
</form>


